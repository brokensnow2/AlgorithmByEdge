#include<iostream>
/**
 * 异或运算符（^）有一些特性使得它在这种情况下非常有用。

1. **交换律**：`a ^ b = b ^ a`。异或运算的顺序不影响结果。

2. **结合律**：`(a ^ b) ^ c = a ^ (b ^ c)`。无论如何组合异或运算，结果都是一样的。

3. **自反性**：`a ^ b ^ b = a ^ 0 = a`。任何数与自己异或等于0，任何数与0异或等于自己。

因此，如果我们有一组数，其中只有一个数出现了奇数次，其他数都出现了偶数次，那么所有数的异或结果就是那个出现奇数次的数。

假设我们有一组数`a, b, c, a, b`，其中`c`出现了1次，`a`和`b`都出现了2次。
根据异或运算的自反性，我们知道`a ^ a = 0`，`b ^ b = 0`，
所以`(a ^ a) ^ (b ^ b) ^ c = 0 ^ 0 ^ c = c`。
也就是说，所有数的异或结果就是出现奇数次的数。
 * 
 * 
 * 
*/
using namespace std;
int main(){
    int T;
    while(cin >> T && T){
        int res = 0;
        for(int i = 0; i < T; i++){
            int num;
            cin >> num;
            res ^= num;
        }
        cout << res << endl;
    }
    return 0;
}
