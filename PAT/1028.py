"""
Excel可以根据任意列对记录进行排序。现在你应该模仿这个函数。
输入规范：
每个输入文件包含一个测试用例。对于每种情况，第一行包含两个整数N（≤10^5)和C，其中N是记录的数量，C是应该对记录进行排序的列。
接下来是N行，每行包含一个学生的记录。学生的记录包括他或她的不同ID（一个6位数的数字）、姓名（一个不超过8个字符且没有空格的字符串）
和成绩（0到100之间的整数，包括0和100）。
输出规格：
对于每个测试用例，以N行为单位输出排序结果。也就是说，如果C=1，则必须根据ID按递增顺序对记录进行排序；如果C=2，则记录必须根据名称以不递减的顺序进行排序；
如果C=3，则记录必须根据等级按不递减的顺序进行排序。如果有几个学生的名字或年级相同，必须按照他们的身份证按升序排列。
Sample Input 1:
3 1
000007 James 85
000010 Amy 90
000001 Zoe 60

Sample Output 1:
000001 Zoe 60
000007 James 85
000010 Amy 90

"""
N,C = map(int,input().split())
stus = []
for _ in range(N):
    stus.append(input().split())
if C == 1:
    stus.sort(key=lambda x:x[0])
elif C == 2:
    # 在sort函数中使用元组作为键时，Python会首先比较元组的第一个元素。如果第一个元素相同，那么Python会比较元组的第二个元素
    stus.sort(key=lambda x:(x[1],x[0]))
elif C == 3:
    """
    代码中的sort函数默认是按照字符串进行排序的，这可能会导致一些问题。例如，如果你在C=1或C=3的情况下有两个ID或成绩，
    一个是100，另一个是20，那么按照字符串排序的结果将是100在20之前，这显然是不正确的。
    为了解决这个问题，需要将ID和成绩转换为整数，然后再进行排序。可以通过修改lambda函数来实现这一点
    """
    stus.sort(key=lambda x:(int(x[2]),x[0]))
for i in stus:
    print(f"{i[0]} {i[1]} {i[2]}")